Теория.

1. Какие есть способы объявления функций?
1. Function Declaration (основной), Function Expression, Стрелочные функции (самый новый).

2. Приведите примеры вызова одной и той же функции всеми известными вам способами.
1) Function Declaration
function sum(a, b) {
return a + b;}
2) Function Expression
var sum = function(a, b) {
return a + b;};
3)Стрелочные функции
let func = (arg1, argN) => {
  return expression;
};

3. В чем разница между тестированием и отладкой (дебаггингом)? А что такое логирование?
1)Тестирование - это деятельность, направленная на обнаружение ошибок.
Отладка направлена на установление точной природы известной ошибки, а затем на исправление этой ошибки.
2)Логирование используется для вывода данных в консоль из кода, применяется функция `console.log`.

4. В чем разница между Function Expression и Function Declaration?
Function Declaration – функция, объявленная в основном потоке кода.
Function Expression – объявление функции в контексте какого-либо выражения, например присваивания.

5. Что делает функция `console.log()`?
Выводит сообщение в веб-консоль.

6. По какой причине, мы можем использовать до объявления функцию, объявленную через Function Declaration, но не можем ту, которая объявлена через Function Expression ?
Движок Javascript перед выполнением скрипта или блока кода, прежде всего ищет в нём Function Declaration и создаёт все такие функции. Происходит процесс «стадия инициализации». И только после того, как все объявления Function Declaration будут обработаны, продолжится выполнение.
В результате функции, созданные как Function Declaration, могут быть вызваны раньше своих определений. Функции, объявленные при помощи Function Expression, создаются тогда, когда выполнение доходит до них. 

7. Что такое глобальная зона видимости функций?Область видимости вне любых функций называется глобальной. Переменные, объявленные в ней, видны везде.

8. function showX(x)
{ 
	return x;
}
console.log(showX(28)); // 28

9. function sum(x, y=0) {
  return x+y;
} 
console.log(sum(5)); //5

10. console.log(foo); //undefined

var foo = "Cat";

console.log(foo); //Cat